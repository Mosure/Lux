Shader "ReactiveImageShader"
{
	Properties
	{

	}
	SubShader
	{
		// No culling or depth
		Cull Off ZWrite Off ZTest Always

		Pass
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag

			#include "UnityCG.cginc"

			#define LOUDNESS_LENGTH 128.0
			#define TOTAL_LENGTH 1.25

			float _LoudnessArray[LOUDNESS_LENGTH];
			uint _LoudnessArrayIndex;

			struct appdata
			{
				float4 vertex : POSITION;
				float2 uv : TEXCOORD0;
			};

			struct v2f
			{
				float2 uv : TEXCOORD0;
				float4 vertex : SV_POSITION;
			};

			v2f vert(appdata v)
			{
				v2f o;
				o.vertex = UnityObjectToClipPos(v.vertex);
				o.uv = v.uv;
				return o;
			}

			fixed4 frag(v2f i) : SV_Target
			{
				float width = TOTAL_LENGTH / LOUDNESS_LENGTH;
				float2 st = (i.vertex.xy * 2.0 - _ScreenParams.xy) / max(_ScreenParams.x, _ScreenParams.y);
				
				float3 c = float3(0.0, 0.0, 0.0);

				float d = 1 - sqrt(dot(st, st));

				float relative_ring_num = d / width;
				uint ring_num = relative_ring_num;

				uint index = ((_LoudnessArrayIndex + LOUDNESS_LENGTH) - ring_num) % LOUDNESS_LENGTH;
				uint next_index = (index + 1) % LOUDNESS_LENGTH;

				float3 inner_ring_color = _LoudnessArray[index] * float3(1.0, 1.0, 1.0);
				float3 outer_ring_color = _LoudnessArray[next_index] * float3(1.0, 1.0, 1.0);

				c = lerp(inner_ring_color, outer_ring_color, relative_ring_num - ring_num);

				return float4(c, 1.0);
			}
			ENDCG
		}
	}
}
